<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>How to use: 

1. Select Type (submission, comment etc.)
2. Create conditions
3. Create actions
4. Add modifiers (optional)

If the conditios are met, selected actions will be executed
Learn more about how automoderator works at:
https://www.reddit.com/wiki/automoderator/full-documentation
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHrEeQB7vXkDeMx2MnfQ
        dpR30nXpd9J173fQdqF3zHY9e8J6BXzJegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHu7egB07XEAec13IHjQ
        doh30nXid9N1/nfTdf9303X/d9N1/3fSdel40HaWec13KpajlwB/x30AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7ynkAfcV8A3jO
        dlB30nXQd9N1/nfTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf930nXbeNB2YHrHeAd5yncAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd8t1AHfJ
        dQh40HZ0d9J17nfTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf930nX1d9B1iHnO
        dw53znUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHfK
        dQB5yHcIedJ2gXfTdfd303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X7edJ2l3rNeQ95z3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB6yXkAfsF9A3jQdnR10Hf3c856/3TPef9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/dNB4/3POev910Hj8eNF2i3vIeQd6y3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAe8N5AHXXcwB4z3ZPeNN07WvEg/9Im6z/TaGm/3HMe/9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3TQeP9RpqH/Rpmu/2a/if9403T2eM92Zmr/ZgB6xXkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB4znYAecx3IHfSdc5303X/c856/0OWsf8xgMb/XbST/3jVc/9303X/d9N1/3fT
        df9303X/d9N1/3fTdf941XT/Y7uN/zOCxP8+j7f/b8p+/3fUdP930nXfeM12MXfQdQCFsIUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAesV5AH+lfwF30HaId9N1/3fTdf941HT/WK6Z/yNv1/8qeM7/asSD/3jU
        dP9303X/d9N1/3fTdf9303X/eNR0/27If/8vfcj/IGza/1Gmof9303X/d9N1/3fTdf930Xaie8d6B3rK
        eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4znYAeMx3LXfSdeN303X/d9N1/3jUdP9sxoH/KnjO/wJG
        /f9GmK7/etZy/3jUdP941HT/eNR0/3jUdP961nL/TaCm/wJH/P8kcNX/Z8CH/3jUdP9303X/d9N1/3fS
        dfB4znZCeNJ2AHmWeQAAAAAAAAAAAAAAAAAAAAAAfb98AGz0aQB40HaCd9N1/3fTdf9303X/d9N1/3bS
        dv9Hm6z/CE/1/x9q2/9lvYr/aMGH/2fBh/9nwYf/aMGH/2a+if8kb9b/Bkz4/0CRtf900Hj/d9N1/3fT
        df9303X/d9N1/3fQdZ17t3oDecR4AAAAAAAAAAAAAAAAAAAAAAB5yXgAesl4FXfRdc5303X/d9N1/3fT
        df9303X/eNR0/2G5jv8bZt//BEr6/yl20P8xgMX/MYDG/zGAxv8xgMX/KXfP/wVK+f8XYOX/W7GW/3jU
        dP9303X/d9N1/3fTdf9303X/d9J14HjKdiR4y3YAAAAAAAAAAAAAAAAAAAAAAHfPdgB4zXZCd9J19HfT
        df9303X/d9N1/3fTdf9303X/cs17/zaGwP8ESfr/BUv6/wdN9/8GTPj/Bkz4/wdN9/8FS/n/A0j8/y9+
        yP9uyID/eNR0/3fTdf9303X/d9N1/3fTdf9303X8eM52XHfTdQCEjoQAAAAAAAAAAAB/un4AdthzAHjQ
        dnd303X/d9N1/3fTdf9303X/d9N1/3fTdf941HT/U6if/w9X7f8KUPT/PIy5/0OVsv9DlbL/PI25/wpR
        8/8MU/H/S5+o/3fSdv9303X/d9N1/3fTdf9303X/d9N1/3fTdf930HaTbP9pAHu7eQAAAAAAAAAAAHu9
        egCCmIMBd9B2onfTdf9303X/d9N1/3fTdf9303X/d9N1/3jUdP9pw4X/JXHU/wdN9/9asJf/e9dx/3vX
        cf9asZb/B0z3/yBr2v9kvIv/eNR0/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fRdrx7xHoJe8V6AAAA
        AAAAAAAAecN4AHnDdwp30XW/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3XRd/9ClLP/Bkz4/zSD
        w/9303X/d9N1/zWDwv8ESvr/O4u7/3POev9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9F11nrJ
        eBd6yXgAAAAAAAAAAAB3zXYAd852D3fSdcx303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/eNR0/120
        k/8WX+X/FFzo/2zGgv9sxoL/FFzo/xJb6v9WrJv/eNR0/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df930nXgd891HnfPdgAAAAAAAAAAAHfTdQB303UQd9N1zXfTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df941HT/b8p+/zB/x/8FSvn/UaWh/1Gmof8ESfr/KnfO/2vFg/941HT/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdeB303Ufd9N1AAAAAAAAAAAAd9N1AHfTdRB303XNd9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/TaGl/wtS8v8pdc//KXbP/whP9f9Gma7/dtF3/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/d9N14HfTdR9303UAAAAAAAAAAAB303UAd9N1EHfTdc1303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/d9N1/3jUdP9lvon/IGva/whO9v8ITvb/G2Xf/2C4kP941HT/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303Xgd9N1H3fTdQAAAAAAAAAAAHfTdQB303UQd9N1zXfT
        df9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3TPef88jbr/Bkz4/wVL+v81hcH/ccx8/3fU
        dP9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdeB303Ufd9N1AAAAAAAAAAAAd9N1AHfT
        dRB303XNd9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/eNR0/1iumf8mc9P/JXHU/1Gm
        oP9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N14HfTdR9303UAAAAAAAAA
        AAB303UAd9N1EHfTdc1303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf941HT/bceB/0uf
        qP9Jnar/acOF/3jUdP9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303Xgd9N1H3fT
        dQAAAAAAAAAAAHfTdQB303UQd9N1zXfTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/ddB3/3XQeP9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        deB303Ufd9N1AAAAAAAAAAAAd9N1AHfTdRB303XNd9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N14HfTdR9303UAAAAAAAAAAAB303UAd9N1EHfTdc1303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9N1/3fTdf9303Xgd9N1H3fTdQAAAAAAAAAAAHfTdQB41HYKedF3h3fQdrN30XXFd9J13XfS
        dfR303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X/d9J1+HfSdeF30XXHd9F1tHnRd5R403YUeNN2AAAAAAAAAAAAe9N5AJb/lACRt5ACfLl7BXnF
        eAx5y3ceeM52QHjQdnh30XW+d9J18nfTdf9303X/d9N1/3fTdf9303X/d9N1/3fTdf9303X/d9N1/3fT
        df930nX3d9F1y3jQdod4znZKect3InnGdw58u3oFkLePAp/YngCP0Y4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB1l3UAef91AHnGdwx4zXZDd9B1pHfSdfF303X/d9N1/3fTdf9303X/d9N1/3fT
        df9303X3eNF2t3jOdlR4yXcTfaR8AHq7eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARQBIAHnNeAB6xHgHeM52SnfRdcN303X9d9N1/3fT
        df9303X/d9J11XjPdl56yXgNc89xAIqpiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiyhwB11XMAect3GHjQ
        do9303X1d9N1/HjRdqp5zXcndOlyAHvBeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB5y3gAesZ5CXjQdoF30Hadecp4FHjOdwCLr4sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP///gB///gAH//wAA//4AAH/8AAA//AAAP/gAAB/wAAAP8AAAD/AA
        AAfgAAAH4AAAB+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD4AAAB/+AAf//4Af///gf///8P/8=
</value>
  </data>
</root>